api:
  name: test api
  endpoint: http://localhost
  port: 8080

scenarios:
  - name: test contains function
    method: GET
    path: /shops
    expect:
      body:
        data.id: contains(4, 3, 2, 1)
        data.name: contains(name1, name2, name3, name4)
    variables:
      shopId: data[0].id
      shopId2: data.find { it.name == "name2" }.id
      shopName: data[1].name

  - name: test contains function with variables
    method: GET
    path: /shops
    expect:
      body:
        data.id: contains(4, 3, ${shopId2}, ${shopId})
        data.name: contains(name1, ${shopName}, name3, name4)

  - name: test hasItems function
    method: GET
    path: /shops
    expect:
      body:
        data.id: hasItems(1, 3)
        data.name: hasItems(name2, name4, name3)

  - name: test hasItems function with variables
    method: GET
    path: /shops
    expect:
      body:
        data.id: hasItems(${shopId}, ${shopId2})
        data.name: hasItems(${shopName})

  - name: test greaterThan function
    method: GET
    path: /shops
    expect:
      body:
        data.find { it.name == "${shopName}" }.id: greaterThan(1)
        data.find { it.name == "name2" }.id: greaterThan(1)

  - name: test greaterThan function with variables
    method: GET
    path: /shops
    expect:
      body:
        data.find { it.name == "${shopName}" }.id: greaterThan(${shopId})
        data.find { it.name == "name2" }.id: greaterThan(${shopId})

  - name: test lessThan function
    method: GET
    path: /shops
    expect:
      body:
        data.find { it.name == "${shopName}" }.id: lessThan(10)
        data.find { it.name == "name2" }.id: lessThan(3)